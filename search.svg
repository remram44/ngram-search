<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA[var details, searchbtn, matchedtxt, svg;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}
// mouse-over for info
function s(node) {		// show
    info = g_to_text(node);
    details.nodeValue = nametype + " " + info;
}
function c() {			// clear
    details.nodeValue = ' ';
}
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
})
// functions
function find_child(parent, name, attr) {
    var children = parent.childNodes;
    for (var i=0; i<children.length;i++) {
        if (children[i].tagName == name)
            return (attr != undefined) ? children[i].attributes[attr].value : children[i];
    }
    return;
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_"+attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_"+attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_"+attr].value;
    e.removeAttribute("_orig_"+attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes["width"].value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;
    // Smaller than this size won't fit anything
    if (w < 2*fontsize*fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x=txt.length-2; x>0; x--) {
        if (t.getSubStringLength(0, x+2) <= w) {
            t.textContent = txt.substring(0,x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_child(c[i], x-xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = xpad;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr["width"].value);
    var xmin = parseFloat(attr["x"].value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr["y"].value);
    var ratio = (svg.width.baseVal.value - 2*xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "1.0";
    var el = document.getElementsByTagName("g");
    for(var i=0;i<el.length;i++){
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a["x"].value);
        var ew = parseFloat(a["width"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a["y"].value) > ymin;
        } else {
            var upstack = parseFloat(a["y"].value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.style["opacity"] = "0.5";
                zoom_parent(e);
                e.onclick = function(e){unzoom(); zoom(this);};
                update_text(e);
            }
            // not in current path
            else
                e.style["display"] = "none";
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.style["display"] = "none";
            }
            else {
                zoom_child(e, xmin, ratio);
                e.onclick = function(e){zoom(this);};
                update_text(e);
            }
        }
    }
}
function unzoom() {
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "0.0";
    var el = document.getElementsByTagName("g");
    for(i=0;i<el.length;i++) {
        el[i].style["display"] = "block";
        el[i].style["opacity"] = "1";
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.getElementsByTagName("rect");
    for (var i=0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.style["opacity"] = "0.1";
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.style["opacity"] = "0.0";
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementsByTagName("g");
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        if (e.attributes["class"].value != "func_g")
            continue;
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (rect == null) {
            // the rect might be wrapped in an anchor
            // if nameattr href is being used
            if (rect = find_child(e, "a")) {
                rect = find_child(r, "rect");
            }
        }
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes["width"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes["x"].value);
            orig_save(rect, "fill");
            rect.attributes["fill"].value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.style["opacity"] = "1.0";
    searchbtn.firstChild.nodeValue = "Reset Search"
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.style["opacity"] = "1.0";
    pct = 100 * count / maxwidth;
    if (pct == 100)
        pct = "100"
    else
        pct = pct.toFixed(1)
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function searchover(e) {
    searchbtn.style["opacity"] = "1.0";
}
function searchout(e) {
    if (searching) {
        searchbtn.style["opacity"] = "1.0";
    } else {
        searchbtn.style["opacity"] = "0.1";
    }
}
]]></script><rect x="0" y="0" width="1200" height="838" fill="url(#background)"/><text text-anchor="middle" x="600.00" y="24.00" font-size="17" font-family="Verdana" fill="rgb(0, 0, 0)">Flame Graph</text><text id="details" text-anchor="left" x="10.00" y="821.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><text id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" text-anchor="left" x="10.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Reset Zoom</text><text id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" text-anchor="left" x="1090.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Search</text><text id="matched" text-anchor="left" x="1090.00" y="821.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>perf (4 samples, 2.03%)</title><rect x="10" y="773" width="23" height="15" fill="rgb(223,203,8)"/><text text-anchor="left" x="13.00" y="783.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">p..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>entry_SYSCALL_64_after_hwframe (4 samples, 2.03%)</title><rect x="10" y="757" width="23" height="15" fill="rgb(221,221,23)"/><text text-anchor="left" x="13.00" y="767.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">e..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_syscall_64 (4 samples, 2.03%)</title><rect x="10" y="741" width="23" height="15" fill="rgb(214,107,21)"/><text text-anchor="left" x="13.00" y="751.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">d..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__x64_sys_execve (4 samples, 2.03%)</title><rect x="10" y="725" width="23" height="15" fill="rgb(251,178,23)"/><text text-anchor="left" x="13.00" y="735.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">_..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__do_execve_file.isra.0 (4 samples, 2.03%)</title><rect x="10" y="709" width="23" height="15" fill="rgb(208,117,48)"/><text text-anchor="left" x="13.00" y="719.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">_..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>search_binary_handler (4 samples, 2.03%)</title><rect x="10" y="693" width="23" height="15" fill="rgb(227,208,2)"/><text text-anchor="left" x="13.00" y="703.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">s..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>load_elf_binary (4 samples, 2.03%)</title><rect x="10" y="677" width="23" height="15" fill="rgb(213,228,0)"/><text text-anchor="left" x="13.00" y="687.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">l..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>setup_new_exec (4 samples, 2.03%)</title><rect x="10" y="661" width="23" height="15" fill="rgb(214,31,52)"/><text text-anchor="left" x="13.00" y="671.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">s..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>perf_event_exec (4 samples, 2.03%)</title><rect x="10" y="645" width="23" height="15" fill="rgb(212,158,5)"/><text text-anchor="left" x="13.00" y="655.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">p..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>ctx_resched (4 samples, 2.03%)</title><rect x="10" y="629" width="23" height="15" fill="rgb(213,176,20)"/><text text-anchor="left" x="13.00" y="639.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>perf_pmu_enable.part.0 (4 samples, 2.03%)</title><rect x="10" y="613" width="23" height="15" fill="rgb(236,73,24)"/><text text-anchor="left" x="13.00" y="623.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">p..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>x86_pmu_enable (4 samples, 2.03%)</title><rect x="10" y="597" width="23" height="15" fill="rgb(209,67,10)"/><text text-anchor="left" x="13.00" y="607.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">x..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>intel_tfa_pmu_enable_all (4 samples, 2.03%)</title><rect x="10" y="581" width="23" height="15" fill="rgb(224,208,37)"/><text text-anchor="left" x="13.00" y="591.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">i..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>native_write_msr (4 samples, 2.03%)</title><rect x="10" y="565" width="23" height="15" fill="rgb(238,72,6)"/><text text-anchor="left" x="13.00" y="575.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">n..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.51%)</title><rect x="33" y="741" width="6" height="15" fill="rgb(243,204,21)"/><text text-anchor="left" x="36.00" y="751.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.51%)</title><rect x="33" y="725" width="6" height="15" fill="rgb(213,202,51)"/><text text-anchor="left" x="36.00" y="735.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.51%)</title><rect x="33" y="709" width="6" height="15" fill="rgb(250,62,19)"/><text text-anchor="left" x="36.00" y="719.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>lookup::Ngrams::search_ngram (1 samples, 0.51%)</title><rect x="39" y="741" width="6" height="15" fill="rgb(240,198,32)"/><text text-anchor="left" x="42.00" y="751.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>byteorder::io::ReadBytesExt::read_u8 (1 samples, 0.51%)</title><rect x="39" y="725" width="6" height="15" fill="rgb(241,147,41)"/><text text-anchor="left" x="42.00" y="735.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[[heap]] (3 samples, 1.52%)</title><rect x="33" y="757" width="18" height="15" fill="rgb(231,130,35)"/><text text-anchor="left" x="36.00" y="767.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::Read::read_exact (1 samples, 0.51%)</title><rect x="45" y="741" width="6" height="15" fill="rgb(215,44,14)"/><text text-anchor="left" x="48.00" y="751.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[unknown] (2 samples, 1.02%)</title><rect x="51" y="757" width="12" height="15" fill="rgb(228,228,27)"/><text text-anchor="left" x="54.00" y="767.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::Read::read_exact (2 samples, 1.02%)</title><rect x="51" y="741" width="12" height="15" fill="rgb(229,121,39)"/><text text-anchor="left" x="54.00" y="751.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (1 samples, 0.51%)</title><rect x="111" y="485" width="6" height="15" fill="rgb(233,96,35)"/><text text-anchor="left" x="114.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>lookup::Ngrams::search_trigrams::{{closure}} (1 samples, 0.51%)</title><rect x="111" y="469" width="6" height="15" fill="rgb(214,80,7)"/><text text-anchor="left" x="114.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.51%)</title><rect x="111" y="453" width="6" height="15" fill="rgb(217,203,16)"/><text text-anchor="left" x="114.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::partial_cmp (4 samples, 2.03%)</title><rect x="135" y="437" width="24" height="15" fill="rgb(214,221,24)"/><text text-anchor="left" x="138.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1 samples, 0.51%)</title><rect x="153" y="421" width="6" height="15" fill="rgb(213,67,32)"/><text text-anchor="left" x="156.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::ge (1 samples, 0.51%)</title><rect x="153" y="405" width="6" height="15" fill="rgb(227,211,39)"/><text text-anchor="left" x="156.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (8 samples, 4.06%)</title><rect x="135" y="469" width="48" height="15" fill="rgb(209,147,37)"/><text text-anchor="left" x="138.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">allo..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>lookup::Ngrams::search_trigrams::{{closure}} (8 samples, 4.06%)</title><rect x="135" y="453" width="48" height="15" fill="rgb(221,129,7)"/><text text-anchor="left" x="138.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">look..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::option::Option&lt;T&gt;::unwrap (4 samples, 2.03%)</title><rect x="159" y="437" width="24" height="15" fill="rgb(243,134,11)"/><text text-anchor="left" x="162.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::slice::insert_head (12 samples, 6.09%)</title><rect x="117" y="485" width="72" height="15" fill="rgb(244,112,38)"/><text text-anchor="left" x="120.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">alloc::s..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.51%)</title><rect x="183" y="469" width="6" height="15" fill="rgb(250,3,8)"/><text text-anchor="left" x="186.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (7 samples, 3.55%)</title><rect x="297" y="421" width="42" height="15" fill="rgb(206,66,50)"/><text text-anchor="left" x="300.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">cor..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::ge (7 samples, 3.55%)</title><rect x="297" y="405" width="42" height="15" fill="rgb(213,110,7)"/><text text-anchor="left" x="300.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">cor..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::partial_cmp (15 samples, 7.61%)</title><rect x="261" y="437" width="90" height="15" fill="rgb(250,104,30)"/><text text-anchor="left" x="264.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::cmp:..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (2 samples, 1.02%)</title><rect x="339" y="421" width="12" height="15" fill="rgb(205,58,6)"/><text text-anchor="left" x="342.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::le (2 samples, 1.02%)</title><rect x="339" y="405" width="12" height="15" fill="rgb(232,228,46)"/><text text-anchor="left" x="342.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (28 samples, 14.21%)</title><rect x="261" y="469" width="168" height="15" fill="rgb(214,71,34)"/><text text-anchor="left" x="264.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">alloc::slice::&lt;impl [..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>lookup::Ngrams::search_trigrams::{{closure}} (28 samples, 14.21%)</title><rect x="261" y="453" width="168" height="15" fill="rgb(222,29,44)"/><text text-anchor="left" x="264.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">lookup::Ngrams::searc..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::option::Option&lt;T&gt;::unwrap (13 samples, 6.60%)</title><rect x="351" y="437" width="78" height="15" fill="rgb(206,6,14)"/><text text-anchor="left" x="354.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::opt..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::slice::merge::get_and_increment (9 samples, 4.57%)</title><rect x="429" y="469" width="54" height="15" fill="rgb(238,181,13)"/><text text-anchor="left" x="432.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">alloc..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (7 samples, 3.55%)</title><rect x="441" y="453" width="42" height="15" fill="rgb(252,171,39)"/><text text-anchor="left" x="444.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">cor..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::intrinsics::copy_nonoverlapping (3 samples, 1.52%)</title><rect x="483" y="469" width="18" height="15" fill="rgb(237,19,21)"/><text text-anchor="left" x="486.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::slice::merge (53 samples, 26.90%)</title><rect x="189" y="485" width="318" height="15" fill="rgb(235,118,17)"/><text text-anchor="left" x="192.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">alloc::slice::merge</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::drop_in_place (1 samples, 0.51%)</title><rect x="501" y="469" width="6" height="15" fill="rgb(233,129,10)"/><text text-anchor="left" x="504.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::slice::merge::MergeHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.51%)</title><rect x="501" y="453" width="6" height="15" fill="rgb(212,210,4)"/><text text-anchor="left" x="504.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::slice::merge_sort::collapse (1 samples, 0.51%)</title><rect x="507" y="485" width="6" height="15" fill="rgb(235,133,31)"/><text text-anchor="left" x="510.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::slice::&lt;impl [T]&gt;::sort_by (72 samples, 36.55%)</title><rect x="87" y="517" width="432" height="15" fill="rgb(247,67,19)"/><text text-anchor="left" x="90.00" y="527.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">alloc::slice::&lt;impl [T]&gt;::sort_by</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::slice::merge_sort (72 samples, 36.55%)</title><rect x="87" y="501" width="432" height="15" fill="rgb(252,128,29)"/><text text-anchor="left" x="90.00" y="511.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">alloc::slice::merge_sort</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::vec::Vec&lt;T&gt;::remove (1 samples, 0.51%)</title><rect x="513" y="485" width="6" height="15" fill="rgb(220,142,10)"/><text text-anchor="left" x="516.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::intrinsics::copy (1 samples, 0.51%)</title><rect x="513" y="469" width="6" height="15" fill="rgb(231,17,41)"/><text text-anchor="left" x="516.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__memmove_avx_unaligned_erms (1 samples, 0.51%)</title><rect x="513" y="453" width="6" height="15" fill="rgb(209,72,29)"/><text text-anchor="left" x="516.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.51%)</title><rect x="525" y="437" width="6" height="15" fill="rgb(230,135,19)"/><text text-anchor="left" x="528.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::Drain&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.51%)</title><rect x="525" y="421" width="6" height="15" fill="rgb(222,185,51)"/><text text-anchor="left" x="528.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;hashbrown::map::Drain&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.51%)</title><rect x="525" y="405" width="6" height="15" fill="rgb(220,161,37)"/><text text-anchor="left" x="528.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;hashbrown::raw::RawDrain&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.51%)</title><rect x="525" y="389" width="6" height="15" fill="rgb(228,75,20)"/><text text-anchor="left" x="528.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.51%)</title><rect x="525" y="373" width="6" height="15" fill="rgb(252,171,9)"/><text text-anchor="left" x="528.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.51%)</title><rect x="525" y="357" width="6" height="15" fill="rgb(244,129,27)"/><text text-anchor="left" x="528.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.51%)</title><rect x="525" y="341" width="6" height="15" fill="rgb(243,87,27)"/><text text-anchor="left" x="528.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.51%)</title><rect x="525" y="325" width="6" height="15" fill="rgb(227,3,2)"/><text text-anchor="left" x="528.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.51%)</title><rect x="531" y="421" width="6" height="15" fill="rgb(221,223,34)"/><text text-anchor="left" x="534.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>prepare_exit_to_usermode (1 samples, 0.51%)</title><rect x="531" y="405" width="6" height="15" fill="rgb(249,0,44)"/><text text-anchor="left" x="534.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::iter::traits::iterator::Iterator::collect (4 samples, 2.03%)</title><rect x="519" y="517" width="24" height="15" fill="rgb(205,37,52)"/><text text-anchor="left" x="522.00" y="527.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 2.03%)</title><rect x="519" y="501" width="24" height="15" fill="rgb(210,54,32)"/><text text-anchor="left" x="522.00" y="511.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (4 samples, 2.03%)</title><rect x="519" y="485" width="24" height="15" fill="rgb(247,10,35)"/><text text-anchor="left" x="522.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 2.03%)</title><rect x="519" y="469" width="24" height="15" fill="rgb(230,94,26)"/><text text-anchor="left" x="522.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::vec::Vec&lt;T&gt;::extend_desugared (4 samples, 2.03%)</title><rect x="519" y="453" width="24" height="15" fill="rgb(235,35,7)"/><text text-anchor="left" x="522.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">a..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::write (2 samples, 1.02%)</title><rect x="531" y="437" width="12" height="15" fill="rgb(235,71,10)"/><text text-anchor="left" x="534.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>sync_regs (1 samples, 0.51%)</title><rect x="537" y="421" width="6" height="15" fill="rgb(211,112,5)"/><text text-anchor="left" x="540.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::drop_in_place (1 samples, 0.51%)</title><rect x="543" y="517" width="6" height="15" fill="rgb(234,168,16)"/><text text-anchor="left" x="546.00" y="527.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::drop_in_place (1 samples, 0.51%)</title><rect x="543" y="501" width="6" height="15" fill="rgb(234,66,54)"/><text text-anchor="left" x="546.00" y="511.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::drop_in_place (1 samples, 0.51%)</title><rect x="543" y="485" width="6" height="15" fill="rgb(251,120,42)"/><text text-anchor="left" x="546.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.51%)</title><rect x="543" y="469" width="6" height="15" fill="rgb(235,118,6)"/><text text-anchor="left" x="546.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::RawTable&lt;T&gt;::free_buckets (1 samples, 0.51%)</title><rect x="543" y="453" width="6" height="15" fill="rgb(224,167,24)"/><text text-anchor="left" x="546.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::alloc::dealloc (1 samples, 0.51%)</title><rect x="543" y="437" width="6" height="15" fill="rgb(235,17,22)"/><text text-anchor="left" x="546.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI_munmap (1 samples, 0.51%)</title><rect x="543" y="421" width="6" height="15" fill="rgb(218,46,9)"/><text text-anchor="left" x="546.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.51%)</title><rect x="543" y="405" width="6" height="15" fill="rgb(209,170,13)"/><text text-anchor="left" x="546.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_syscall_64 (1 samples, 0.51%)</title><rect x="543" y="389" width="6" height="15" fill="rgb(237,15,50)"/><text text-anchor="left" x="546.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__x64_sys_munmap (1 samples, 0.51%)</title><rect x="543" y="373" width="6" height="15" fill="rgb(209,115,8)"/><text text-anchor="left" x="546.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__vm_munmap (1 samples, 0.51%)</title><rect x="543" y="357" width="6" height="15" fill="rgb(250,212,48)"/><text text-anchor="left" x="546.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__do_munmap (1 samples, 0.51%)</title><rect x="543" y="341" width="6" height="15" fill="rgb(214,31,20)"/><text text-anchor="left" x="546.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>unmap_region (1 samples, 0.51%)</title><rect x="543" y="325" width="6" height="15" fill="rgb(212,22,4)"/><text text-anchor="left" x="546.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>unmap_vmas (1 samples, 0.51%)</title><rect x="543" y="309" width="6" height="15" fill="rgb(221,138,32)"/><text text-anchor="left" x="546.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>unmap_single_vma (1 samples, 0.51%)</title><rect x="543" y="293" width="6" height="15" fill="rgb(250,207,17)"/><text text-anchor="left" x="546.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>unmap_page_range (1 samples, 0.51%)</title><rect x="543" y="277" width="6" height="15" fill="rgb(244,120,16)"/><text text-anchor="left" x="546.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>zap_pte_range.isra.0 (1 samples, 0.51%)</title><rect x="543" y="261" width="6" height="15" fill="rgb(250,176,6)"/><text text-anchor="left" x="546.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>crypt_extent (1 samples, 0.51%)</title><rect x="573" y="181" width="6" height="15" fill="rgb(215,159,27)"/><text text-anchor="left" x="576.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>crypt_scatterlist (1 samples, 0.51%)</title><rect x="573" y="165" width="6" height="15" fill="rgb(228,228,9)"/><text text-anchor="left" x="576.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>crypto_skcipher_decrypt (1 samples, 0.51%)</title><rect x="573" y="149" width="6" height="15" fill="rgb(207,98,6)"/><text text-anchor="left" x="576.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>simd_skcipher_decrypt (1 samples, 0.51%)</title><rect x="573" y="133" width="6" height="15" fill="rgb(233,166,36)"/><text text-anchor="left" x="576.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>crypto_skcipher_decrypt (1 samples, 0.51%)</title><rect x="573" y="117" width="6" height="15" fill="rgb(234,136,14)"/><text text-anchor="left" x="576.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>cbc_decrypt (1 samples, 0.51%)</title><rect x="573" y="101" width="6" height="15" fill="rgb(240,166,26)"/><text text-anchor="left" x="576.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_aesni_dec4 (1 samples, 0.51%)</title><rect x="573" y="85" width="6" height="15" fill="rgb(252,130,11)"/><text text-anchor="left" x="576.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (2 samples, 1.02%)</title><rect x="573" y="453" width="12" height="15" fill="rgb(230,80,18)"/><text text-anchor="left" x="576.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::fs::File as std::io::Read&gt;::read (2 samples, 1.02%)</title><rect x="573" y="437" width="12" height="15" fill="rgb(241,43,38)"/><text text-anchor="left" x="576.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::fs::File::read (2 samples, 1.02%)</title><rect x="573" y="421" width="12" height="15" fill="rgb(245,31,15)"/><text text-anchor="left" x="576.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::fd::FileDesc::read (2 samples, 1.02%)</title><rect x="573" y="405" width="12" height="15" fill="rgb(214,216,47)"/><text text-anchor="left" x="576.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__libc_read (2 samples, 1.02%)</title><rect x="573" y="389" width="12" height="15" fill="rgb(222,222,22)"/><text text-anchor="left" x="576.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>entry_SYSCALL_64_after_hwframe (2 samples, 1.02%)</title><rect x="573" y="373" width="12" height="15" fill="rgb(251,26,52)"/><text text-anchor="left" x="576.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_syscall_64 (2 samples, 1.02%)</title><rect x="573" y="357" width="12" height="15" fill="rgb(233,14,41)"/><text text-anchor="left" x="576.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__x64_sys_read (2 samples, 1.02%)</title><rect x="573" y="341" width="12" height="15" fill="rgb(209,169,35)"/><text text-anchor="left" x="576.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>ksys_read (2 samples, 1.02%)</title><rect x="573" y="325" width="12" height="15" fill="rgb(222,16,53)"/><text text-anchor="left" x="576.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>vfs_read (2 samples, 1.02%)</title><rect x="573" y="309" width="12" height="15" fill="rgb(247,69,35)"/><text text-anchor="left" x="576.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__vfs_read (2 samples, 1.02%)</title><rect x="573" y="293" width="12" height="15" fill="rgb(215,131,0)"/><text text-anchor="left" x="576.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>new_sync_read (2 samples, 1.02%)</title><rect x="573" y="277" width="12" height="15" fill="rgb(253,214,22)"/><text text-anchor="left" x="576.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>ecryptfs_read_update_atime (2 samples, 1.02%)</title><rect x="573" y="261" width="12" height="15" fill="rgb(230,73,42)"/><text text-anchor="left" x="576.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>generic_file_read_iter (2 samples, 1.02%)</title><rect x="573" y="245" width="12" height="15" fill="rgb(218,69,36)"/><text text-anchor="left" x="576.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>generic_file_buffered_read (2 samples, 1.02%)</title><rect x="573" y="229" width="12" height="15" fill="rgb(228,187,28)"/><text text-anchor="left" x="576.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>ecryptfs_readpage (2 samples, 1.02%)</title><rect x="573" y="213" width="12" height="15" fill="rgb(242,102,50)"/><text text-anchor="left" x="576.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>ecryptfs_decrypt_page (2 samples, 1.02%)</title><rect x="573" y="197" width="12" height="15" fill="rgb(249,126,42)"/><text text-anchor="left" x="576.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>ecryptfs_read_lower (1 samples, 0.51%)</title><rect x="579" y="181" width="6" height="15" fill="rgb(228,74,36)"/><text text-anchor="left" x="582.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>kernel_read (1 samples, 0.51%)</title><rect x="579" y="165" width="6" height="15" fill="rgb(209,42,21)"/><text text-anchor="left" x="582.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>vfs_read (1 samples, 0.51%)</title><rect x="579" y="149" width="6" height="15" fill="rgb(220,31,25)"/><text text-anchor="left" x="582.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__vfs_read (1 samples, 0.51%)</title><rect x="579" y="133" width="6" height="15" fill="rgb(223,134,19)"/><text text-anchor="left" x="582.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>new_sync_read (1 samples, 0.51%)</title><rect x="579" y="117" width="6" height="15" fill="rgb(216,144,45)"/><text text-anchor="left" x="582.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>ext4_file_read_iter (1 samples, 0.51%)</title><rect x="579" y="101" width="6" height="15" fill="rgb(246,149,43)"/><text text-anchor="left" x="582.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>generic_file_read_iter (1 samples, 0.51%)</title><rect x="579" y="85" width="6" height="15" fill="rgb(221,91,17)"/><text text-anchor="left" x="582.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>generic_file_buffered_read (1 samples, 0.51%)</title><rect x="579" y="69" width="6" height="15" fill="rgb(223,129,13)"/><text text-anchor="left" x="582.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>copy_page_to_iter (1 samples, 0.51%)</title><rect x="579" y="53" width="6" height="15" fill="rgb(221,157,44)"/><text text-anchor="left" x="582.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>memcpy_erms (1 samples, 0.51%)</title><rect x="579" y="37" width="6" height="15" fill="rgb(253,20,14)"/><text text-anchor="left" x="582.00" y="47.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (4 samples, 2.03%)</title><rect x="567" y="469" width="24" height="15" fill="rgb(227,201,33)"/><text text-anchor="left" x="570.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (1 samples, 0.51%)</title><rect x="585" y="453" width="6" height="15" fill="rgb(246,160,9)"/><text text-anchor="left" x="588.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.51%)</title><rect x="585" y="437" width="6" height="15" fill="rgb(234,72,48)"/><text text-anchor="left" x="588.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.51%)</title><rect x="585" y="421" width="6" height="15" fill="rgb(239,173,15)"/><text text-anchor="left" x="588.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__memmove_avx_unaligned_erms (1 samples, 0.51%)</title><rect x="585" y="405" width="6" height="15" fill="rgb(231,139,46)"/><text text-anchor="left" x="588.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>byteorder::io::ReadBytesExt::read_u32 (8 samples, 4.06%)</title><rect x="555" y="501" width="47" height="15" fill="rgb(236,49,20)"/><text text-anchor="left" x="558.00" y="511.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">byte..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::Read::read_exact (7 samples, 3.55%)</title><rect x="561" y="485" width="41" height="15" fill="rgb(217,54,46)"/><text text-anchor="left" x="564.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::slice::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 1.02%)</title><rect x="591" y="469" width="11" height="15" fill="rgb(252,225,19)"/><text text-anchor="left" x="594.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 1.02%)</title><rect x="591" y="453" width="11" height="15" fill="rgb(226,5,47)"/><text text-anchor="left" x="594.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.51%)</title><rect x="597" y="437" width="5" height="15" fill="rgb(234,18,11)"/><text text-anchor="left" x="600.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.51%)</title><rect x="597" y="421" width="5" height="15" fill="rgb(246,131,39)"/><text text-anchor="left" x="600.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.51%)</title><rect x="597" y="405" width="5" height="15" fill="rgb(235,93,18)"/><text text-anchor="left" x="600.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.51%)</title><rect x="597" y="389" width="5" height="15" fill="rgb(212,96,8)"/><text text-anchor="left" x="600.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::from_error (1 samples, 0.51%)</title><rect x="650" y="453" width="6" height="15" fill="rgb(213,106,24)"/><text text-anchor="left" x="653.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::BufRead&gt;::consume (1 samples, 0.51%)</title><rect x="656" y="453" width="6" height="15" fill="rgb(206,133,21)"/><text text-anchor="left" x="659.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>lookup::Ngrams::search_ngram (20 samples, 10.15%)</title><rect x="549" y="517" width="119" height="15" fill="rgb(208,14,49)"/><text text-anchor="left" x="552.00" y="527.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">lookup::Ngrams..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>byteorder::io::ReadBytesExt::read_u8 (11 samples, 5.58%)</title><rect x="602" y="501" width="66" height="15" fill="rgb(221,137,4)"/><text text-anchor="left" x="605.00" y="511.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">byteord..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::Read::read_exact (7 samples, 3.55%)</title><rect x="626" y="485" width="42" height="15" fill="rgb(250,118,19)"/><text text-anchor="left" x="629.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::Read&gt;::read (6 samples, 3.05%)</title><rect x="632" y="469" width="36" height="15" fill="rgb(216,199,29)"/><text text-anchor="left" x="635.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;st..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (1 samples, 0.51%)</title><rect x="662" y="453" width="6" height="15" fill="rgb(229,197,7)"/><text text-anchor="left" x="665.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::Bucket&lt;T&gt;::write (13 samples, 6.60%)</title><rect x="680" y="453" width="78" height="15" fill="rgb(250,60,8)"/><text text-anchor="left" x="683.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbrown..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (13 samples, 6.60%)</title><rect x="680" y="437" width="78" height="15" fill="rgb(223,41,36)"/><text text-anchor="left" x="683.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::ptr..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::write (13 samples, 6.60%)</title><rect x="680" y="421" width="78" height="15" fill="rgb(254,106,11)"/><text text-anchor="left" x="683.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::ptr..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.51%)</title><rect x="764" y="437" width="6" height="15" fill="rgb(217,147,20)"/><text text-anchor="left" x="767.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (18 samples, 9.14%)</title><rect x="668" y="517" width="108" height="15" fill="rgb(244,6,28)"/><text text-anchor="left" x="671.00" y="527.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::collecti..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (18 samples, 9.14%)</title><rect x="668" y="501" width="108" height="15" fill="rgb(224,106,31)"/><text text-anchor="left" x="671.00" y="511.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::collecti..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V&gt;::insert (18 samples, 9.14%)</title><rect x="668" y="485" width="108" height="15" fill="rgb(220,43,47)"/><text text-anchor="left" x="671.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbrown::ru..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::RawTable&lt;T&gt;::insert_no_grow (18 samples, 9.14%)</title><rect x="668" y="469" width="108" height="15" fill="rgb(214,108,47)"/><text text-anchor="left" x="671.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbrown::ra..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::RawTable&lt;T&gt;::find_insert_slot (3 samples, 1.52%)</title><rect x="758" y="453" width="18" height="15" fill="rgb(250,98,10)"/><text text-anchor="left" x="761.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::sse2::Group::load (1 samples, 0.51%)</title><rect x="770" y="437" width="6" height="15" fill="rgb(211,18,1)"/><text text-anchor="left" x="773.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.51%)</title><rect x="770" y="421" width="6" height="15" fill="rgb(231,87,54)"/><text text-anchor="left" x="773.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.51%)</title><rect x="770" y="405" width="6" height="15" fill="rgb(210,29,47)"/><text text-anchor="left" x="773.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.51%)</title><rect x="794" y="421" width="6" height="15" fill="rgb(237,214,30)"/><text text-anchor="left" x="797.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.51%)</title><rect x="806" y="341" width="6" height="15" fill="rgb(227,55,27)"/><text text-anchor="left" x="809.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 2.03%)</title><rect x="800" y="389" width="24" height="15" fill="rgb(224,14,42)"/><text text-anchor="left" x="803.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 2.03%)</title><rect x="800" y="373" width="24" height="15" fill="rgb(250,71,18)"/><text text-anchor="left" x="803.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 2.03%)</title><rect x="800" y="357" width="24" height="15" fill="rgb(253,132,33)"/><text text-anchor="left" x="803.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 1.02%)</title><rect x="812" y="341" width="12" height="15" fill="rgb(251,123,40)"/><text text-anchor="left" x="815.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 1.02%)</title><rect x="824" y="389" width="12" height="15" fill="rgb(243,220,25)"/><text text-anchor="left" x="827.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.51%)</title><rect x="830" y="373" width="6" height="15" fill="rgb(242,151,1)"/><text text-anchor="left" x="833.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.51%)</title><rect x="830" y="357" width="6" height="15" fill="rgb(250,138,50)"/><text text-anchor="left" x="833.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.51%)</title><rect x="830" y="341" width="6" height="15" fill="rgb(239,226,2)"/><text text-anchor="left" x="833.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::map::HashMap&lt;K,V,S&gt;::reserve::{{closure}} (12 samples, 6.09%)</title><rect x="800" y="421" width="72" height="15" fill="rgb(211,226,4)"/><text text-anchor="left" x="803.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbrow..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::map::make_hash (12 samples, 6.09%)</title><rect x="800" y="405" width="72" height="15" fill="rgb(212,169,47)"/><text text-anchor="left" x="803.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbrow..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (6 samples, 3.05%)</title><rect x="836" y="389" width="36" height="15" fill="rgb(242,214,18)"/><text text-anchor="left" x="839.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">cor..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::hash::Hasher::write_u32 (4 samples, 2.03%)</title><rect x="848" y="373" width="24" height="15" fill="rgb(254,38,35)"/><text text-anchor="left" x="851.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 1.02%)</title><rect x="860" y="357" width="12" height="15" fill="rgb(238,109,34)"/><text text-anchor="left" x="863.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 1.02%)</title><rect x="860" y="341" width="12" height="15" fill="rgb(212,178,37)"/><text text-anchor="left" x="863.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 1.02%)</title><rect x="860" y="325" width="12" height="15" fill="rgb(251,211,6)"/><text text-anchor="left" x="863.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::hash::sip::u8to64_le (2 samples, 1.02%)</title><rect x="860" y="309" width="12" height="15" fill="rgb(229,191,37)"/><text text-anchor="left" x="863.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.51%)</title><rect x="866" y="293" width="6" height="15" fill="rgb(245,154,48)"/><text text-anchor="left" x="869.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>page_fault (1 samples, 0.51%)</title><rect x="878" y="373" width="6" height="15" fill="rgb(235,194,48)"/><text text-anchor="left" x="881.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_page_fault (1 samples, 0.51%)</title><rect x="878" y="357" width="6" height="15" fill="rgb(225,31,51)"/><text text-anchor="left" x="881.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__do_page_fault (1 samples, 0.51%)</title><rect x="878" y="341" width="6" height="15" fill="rgb(225,62,30)"/><text text-anchor="left" x="881.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_user_addr_fault (1 samples, 0.51%)</title><rect x="878" y="325" width="6" height="15" fill="rgb(242,58,36)"/><text text-anchor="left" x="881.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>handle_mm_fault (1 samples, 0.51%)</title><rect x="878" y="309" width="6" height="15" fill="rgb(252,33,45)"/><text text-anchor="left" x="881.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__handle_mm_fault (1 samples, 0.51%)</title><rect x="878" y="293" width="6" height="15" fill="rgb(221,78,31)"/><text text-anchor="left" x="881.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_anonymous_page (1 samples, 0.51%)</title><rect x="878" y="277" width="6" height="15" fill="rgb(235,197,51)"/><text text-anchor="left" x="881.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>lru_cache_add_active_or_unevictable (1 samples, 0.51%)</title><rect x="878" y="261" width="6" height="15" fill="rgb(250,70,1)"/><text text-anchor="left" x="881.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__lru_cache_add (1 samples, 0.51%)</title><rect x="878" y="245" width="6" height="15" fill="rgb(209,99,9)"/><text text-anchor="left" x="881.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>pagevec_lru_move_fn (1 samples, 0.51%)</title><rect x="878" y="229" width="6" height="15" fill="rgb(221,132,14)"/><text text-anchor="left" x="881.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (4 samples, 2.03%)</title><rect x="872" y="421" width="24" height="15" fill="rgb(220,42,12)"/><text text-anchor="left" x="875.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">h..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (4 samples, 2.03%)</title><rect x="872" y="405" width="24" height="15" fill="rgb(245,47,35)"/><text text-anchor="left" x="875.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::intrinsics::copy_nonoverlapping (4 samples, 2.03%)</title><rect x="872" y="389" width="24" height="15" fill="rgb(208,31,11)"/><text text-anchor="left" x="875.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>swapgs_restore_regs_and_return_to_usermode (2 samples, 1.02%)</title><rect x="884" y="373" width="12" height="15" fill="rgb(240,60,29)"/><text text-anchor="left" x="887.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>prepare_exit_to_usermode (2 samples, 1.02%)</title><rect x="884" y="357" width="12" height="15" fill="rgb(233,155,5)"/><text text-anchor="left" x="887.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 1.02%)</title><rect x="902" y="405" width="12" height="15" fill="rgb(239,188,1)"/><text text-anchor="left" x="905.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::RawTable&lt;T&gt;::find_insert_slot (5 samples, 2.54%)</title><rect x="896" y="421" width="30" height="15" fill="rgb(210,169,25)"/><text text-anchor="left" x="899.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">ha..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::is_full (2 samples, 1.02%)</title><rect x="914" y="405" width="12" height="15" fill="rgb(249,33,0)"/><text text-anchor="left" x="917.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::map::HashMap&lt;K,V,S&gt;::reserve (24 samples, 12.18%)</title><rect x="788" y="485" width="144" height="15" fill="rgb(215,189,18)"/><text text-anchor="left" x="791.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbrown::map::Ha..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::RawTable&lt;T&gt;::reserve (24 samples, 12.18%)</title><rect x="788" y="469" width="144" height="15" fill="rgb(238,134,47)"/><text text-anchor="left" x="791.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbrown::raw::Ra..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (23 samples, 11.68%)</title><rect x="794" y="453" width="138" height="15" fill="rgb(236,209,0)"/><text text-anchor="left" x="797.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbrown::raw::R..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::RawTable&lt;T&gt;::resize (23 samples, 11.68%)</title><rect x="794" y="437" width="138" height="15" fill="rgb(214,2,28)"/><text text-anchor="left" x="797.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbrown::raw::R..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::RawTable&lt;T&gt;::set_ctrl (1 samples, 0.51%)</title><rect x="926" y="421" width="6" height="15" fill="rgb(235,37,34)"/><text text-anchor="left" x="929.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.51%)</title><rect x="950" y="421" width="6" height="15" fill="rgb(239,85,25)"/><text text-anchor="left" x="953.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.51%)</title><rect x="950" y="405" width="6" height="15" fill="rgb(225,29,11)"/><text text-anchor="left" x="953.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.51%)</title><rect x="956" y="405" width="6" height="15" fill="rgb(225,199,8)"/><text text-anchor="left" x="959.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 3.05%)</title><rect x="932" y="469" width="36" height="15" fill="rgb(231,93,15)"/><text text-anchor="left" x="935.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;st..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 3.05%)</title><rect x="932" y="453" width="36" height="15" fill="rgb(254,217,10)"/><text text-anchor="left" x="935.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;co..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 3.05%)</title><rect x="932" y="437" width="36" height="15" fill="rgb(225,49,53)"/><text text-anchor="left" x="935.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;co..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 1.02%)</title><rect x="956" y="421" width="12" height="15" fill="rgb(235,144,48)"/><text text-anchor="left" x="959.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.51%)</title><rect x="962" y="405" width="6" height="15" fill="rgb(237,183,52)"/><text text-anchor="left" x="965.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::map::make_hash (14 samples, 7.11%)</title><rect x="932" y="485" width="84" height="15" fill="rgb(206,69,10)"/><text text-anchor="left" x="935.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbrown..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (8 samples, 4.06%)</title><rect x="968" y="469" width="48" height="15" fill="rgb(254,120,12)"/><text text-anchor="left" x="971.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::hash::Hasher::write_u32 (8 samples, 4.06%)</title><rect x="968" y="453" width="48" height="15" fill="rgb(221,155,10)"/><text text-anchor="left" x="971.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 3.05%)</title><rect x="980" y="437" width="36" height="15" fill="rgb(230,58,10)"/><text text-anchor="left" x="983.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;st..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 3.05%)</title><rect x="980" y="421" width="36" height="15" fill="rgb(205,178,53)"/><text text-anchor="left" x="983.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;co..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 3.05%)</title><rect x="980" y="405" width="36" height="15" fill="rgb(222,19,14)"/><text text-anchor="left" x="983.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;co..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::hash::sip::u8to64_le (5 samples, 2.54%)</title><rect x="986" y="389" width="30" height="15" fill="rgb(237,5,8)"/><text text-anchor="left" x="989.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">co..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;hashbrown::raw::ProbeSeq as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.51%)</title><rect x="1028" y="437" width="6" height="15" fill="rgb(242,121,36)"/><text text-anchor="left" x="1031.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (9 samples, 4.57%)</title><rect x="1028" y="469" width="54" height="15" fill="rgb(252,8,22)"/><text text-anchor="left" x="1031.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashb..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (9 samples, 4.57%)</title><rect x="1028" y="453" width="54" height="15" fill="rgb(221,130,20)"/><text text-anchor="left" x="1031.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashb..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::sse2::Group::load (8 samples, 4.06%)</title><rect x="1034" y="437" width="48" height="15" fill="rgb(254,83,0)"/><text text-anchor="left" x="1037.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hash..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::core_arch::x86::sse2::_mm_loadu_si128 (8 samples, 4.06%)</title><rect x="1034" y="421" width="48" height="15" fill="rgb(228,21,20)"/><text text-anchor="left" x="1037.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::intrinsics::copy_nonoverlapping (8 samples, 4.06%)</title><rect x="1034" y="405" width="48" height="15" fill="rgb(251,187,51)"/><text text-anchor="left" x="1037.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_start (185 samples, 93.91%)</title><rect x="63" y="757" width="1109" height="15" fill="rgb(222,228,7)"/><text text-anchor="left" x="66.00" y="767.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">_start</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__libc_start_main (185 samples, 93.91%)</title><rect x="63" y="741" width="1109" height="15" fill="rgb(216,65,22)"/><text text-anchor="left" x="66.00" y="751.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__libc_start_main</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>main (185 samples, 93.91%)</title><rect x="63" y="725" width="1109" height="15" fill="rgb(249,45,3)"/><text text-anchor="left" x="66.00" y="735.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">main</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::rt::lang_start_internal (185 samples, 93.91%)</title><rect x="63" y="709" width="1109" height="15" fill="rgb(240,192,7)"/><text text-anchor="left" x="66.00" y="719.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::rt::lang_start_internal</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panic::catch_unwind (185 samples, 93.91%)</title><rect x="63" y="693" width="1109" height="15" fill="rgb(251,201,24)"/><text text-anchor="left" x="66.00" y="703.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panic::catch_unwind</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panicking::try (185 samples, 93.91%)</title><rect x="63" y="677" width="1109" height="15" fill="rgb(233,23,3)"/><text text-anchor="left" x="66.00" y="687.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panicking::try</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panicking::try::do_call (185 samples, 93.91%)</title><rect x="63" y="661" width="1109" height="15" fill="rgb(240,125,36)"/><text text-anchor="left" x="66.00" y="671.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panicking::try::do_call</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (185 samples, 93.91%)</title><rect x="63" y="645" width="1109" height="15" fill="rgb(208,183,53)"/><text text-anchor="left" x="66.00" y="655.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::rt::lang_start::{{closure}} (185 samples, 93.91%)</title><rect x="63" y="629" width="1109" height="15" fill="rgb(248,161,40)"/><text text-anchor="left" x="66.00" y="639.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::rt::lang_start::{{closure}}</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys_common::backtrace::__rust_begin_short_backtrace (185 samples, 93.91%)</title><rect x="63" y="613" width="1109" height="15" fill="rgb(245,118,8)"/><text text-anchor="left" x="66.00" y="623.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ops::function::FnOnce::call_once (185 samples, 93.91%)</title><rect x="63" y="597" width="1109" height="15" fill="rgb(213,212,28)"/><text text-anchor="left" x="66.00" y="607.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::ops::function::FnOnce::call_once</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>search::main (185 samples, 93.91%)</title><rect x="63" y="581" width="1109" height="15" fill="rgb(208,65,47)"/><text text-anchor="left" x="66.00" y="591.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">search::main</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>search::search (185 samples, 93.91%)</title><rect x="63" y="565" width="1109" height="15" fill="rgb(240,153,11)"/><text text-anchor="left" x="66.00" y="575.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">search::search</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>lookup::Ngrams::search (185 samples, 93.91%)</title><rect x="63" y="549" width="1109" height="15" fill="rgb(250,190,11)"/><text text-anchor="left" x="66.00" y="559.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">lookup::Ngrams::search</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>lookup::Ngrams::search_trigrams (185 samples, 93.91%)</title><rect x="63" y="533" width="1109" height="15" fill="rgb(219,57,54)"/><text text-anchor="left" x="66.00" y="543.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">lookup::Ngrams::search_trigrams</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (66 samples, 33.50%)</title><rect x="776" y="517" width="396" height="15" fill="rgb(225,46,52)"/><text text-anchor="left" x="779.00" y="527.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (66 samples, 33.50%)</title><rect x="776" y="501" width="396" height="15" fill="rgb(242,216,5)"/><text text-anchor="left" x="779.00" y="511.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::raw::RawTable&lt;T&gt;::find (26 samples, 13.20%)</title><rect x="1016" y="485" width="156" height="15" fill="rgb(222,193,4)"/><text text-anchor="left" x="1019.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbrown::raw::RawT..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry::{{closure}} (15 samples, 7.61%)</title><rect x="1082" y="469" width="90" height="15" fill="rgb(211,152,38)"/><text text-anchor="left" x="1085.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">hashbrown:..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (15 samples, 7.61%)</title><rect x="1082" y="453" width="90" height="15" fill="rgb(231,120,40)"/><text text-anchor="left" x="1085.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::cmp:..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__x64_sys_execve (1 samples, 0.51%)</title><rect x="1172" y="725" width="6" height="15" fill="rgb(207,227,47)"/><text text-anchor="left" x="1175.00" y="735.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__do_execve_file.isra.0 (1 samples, 0.51%)</title><rect x="1172" y="709" width="6" height="15" fill="rgb(248,199,23)"/><text text-anchor="left" x="1175.00" y="719.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>search_binary_handler (1 samples, 0.51%)</title><rect x="1172" y="693" width="6" height="15" fill="rgb(221,197,53)"/><text text-anchor="left" x="1175.00" y="703.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>load_elf_binary (1 samples, 0.51%)</title><rect x="1172" y="677" width="6" height="15" fill="rgb(243,146,8)"/><text text-anchor="left" x="1175.00" y="687.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>setup_arg_pages (1 samples, 0.51%)</title><rect x="1172" y="661" width="6" height="15" fill="rgb(242,202,34)"/><text text-anchor="left" x="1175.00" y="671.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>lru_add_drain (1 samples, 0.51%)</title><rect x="1172" y="645" width="6" height="15" fill="rgb(227,48,28)"/><text text-anchor="left" x="1175.00" y="655.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>entry_SYSCALL_64_after_hwframe (2 samples, 1.02%)</title><rect x="1172" y="757" width="12" height="15" fill="rgb(231,82,52)"/><text text-anchor="left" x="1175.00" y="767.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_syscall_64 (2 samples, 1.02%)</title><rect x="1172" y="741" width="12" height="15" fill="rgb(237,227,49)"/><text text-anchor="left" x="1175.00" y="751.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__x64_sys_exit_group (1 samples, 0.51%)</title><rect x="1178" y="725" width="6" height="15" fill="rgb(221,125,8)"/><text text-anchor="left" x="1181.00" y="735.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_group_exit (1 samples, 0.51%)</title><rect x="1178" y="709" width="6" height="15" fill="rgb(230,198,50)"/><text text-anchor="left" x="1181.00" y="719.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_exit (1 samples, 0.51%)</title><rect x="1178" y="693" width="6" height="15" fill="rgb(241,136,51)"/><text text-anchor="left" x="1181.00" y="703.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>mmput (1 samples, 0.51%)</title><rect x="1178" y="677" width="6" height="15" fill="rgb(233,170,33)"/><text text-anchor="left" x="1181.00" y="687.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>exit_mmap (1 samples, 0.51%)</title><rect x="1178" y="661" width="6" height="15" fill="rgb(246,79,53)"/><text text-anchor="left" x="1181.00" y="671.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>unmap_vmas (1 samples, 0.51%)</title><rect x="1178" y="645" width="6" height="15" fill="rgb(238,120,6)"/><text text-anchor="left" x="1181.00" y="655.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>unmap_single_vma (1 samples, 0.51%)</title><rect x="1178" y="629" width="6" height="15" fill="rgb(221,159,51)"/><text text-anchor="left" x="1181.00" y="639.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>unmap_page_range (1 samples, 0.51%)</title><rect x="1178" y="613" width="6" height="15" fill="rgb(210,225,40)"/><text text-anchor="left" x="1181.00" y="623.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>zap_pte_range.isra.0 (1 samples, 0.51%)</title><rect x="1178" y="597" width="6" height="15" fill="rgb(205,83,18)"/><text text-anchor="left" x="1181.00" y="607.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>all (197 samples, 100%)</title><rect x="10" y="789" width="1180" height="15" fill="rgb(249,222,48)"/><text text-anchor="left" x="13.00" y="799.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>search (193 samples, 97.97%)</title><rect x="33" y="773" width="1157" height="15" fill="rgb(224,222,40)"/><text text-anchor="left" x="36.00" y="783.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">search</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>page_fault (1 samples, 0.51%)</title><rect x="1184" y="757" width="6" height="15" fill="rgb(223,117,24)"/><text text-anchor="left" x="1187.00" y="767.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g></svg>