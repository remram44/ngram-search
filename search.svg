<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA[var details, searchbtn, matchedtxt, svg;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}
// mouse-over for info
function s(node) {		// show
    info = g_to_text(node);
    details.nodeValue = nametype + " " + info;
}
function c() {			// clear
    details.nodeValue = ' ';
}
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
})
// functions
function find_child(parent, name, attr) {
    var children = parent.childNodes;
    for (var i=0; i<children.length;i++) {
        if (children[i].tagName == name)
            return (attr != undefined) ? children[i].attributes[attr].value : children[i];
    }
    return;
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_"+attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_"+attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_"+attr].value;
    e.removeAttribute("_orig_"+attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes["width"].value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;
    // Smaller than this size won't fit anything
    if (w < 2*fontsize*fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x=txt.length-2; x>0; x--) {
        if (t.getSubStringLength(0, x+2) <= w) {
            t.textContent = txt.substring(0,x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_child(c[i], x-xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = xpad;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr["width"].value);
    var xmin = parseFloat(attr["x"].value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr["y"].value);
    var ratio = (svg.width.baseVal.value - 2*xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "1.0";
    var el = document.getElementsByTagName("g");
    for(var i=0;i<el.length;i++){
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a["x"].value);
        var ew = parseFloat(a["width"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a["y"].value) > ymin;
        } else {
            var upstack = parseFloat(a["y"].value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.style["opacity"] = "0.5";
                zoom_parent(e);
                e.onclick = function(e){unzoom(); zoom(this);};
                update_text(e);
            }
            // not in current path
            else
                e.style["display"] = "none";
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.style["display"] = "none";
            }
            else {
                zoom_child(e, xmin, ratio);
                e.onclick = function(e){zoom(this);};
                update_text(e);
            }
        }
    }
}
function unzoom() {
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "0.0";
    var el = document.getElementsByTagName("g");
    for(i=0;i<el.length;i++) {
        el[i].style["display"] = "block";
        el[i].style["opacity"] = "1";
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.getElementsByTagName("rect");
    for (var i=0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.style["opacity"] = "0.1";
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.style["opacity"] = "0.0";
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementsByTagName("g");
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        if (e.attributes["class"].value != "func_g")
            continue;
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (rect == null) {
            // the rect might be wrapped in an anchor
            // if nameattr href is being used
            if (rect = find_child(e, "a")) {
                rect = find_child(r, "rect");
            }
        }
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes["width"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes["x"].value);
            orig_save(rect, "fill");
            rect.attributes["fill"].value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.style["opacity"] = "1.0";
    searchbtn.firstChild.nodeValue = "Reset Search"
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.style["opacity"] = "1.0";
    pct = 100 * count / maxwidth;
    if (pct == 100)
        pct = "100"
    else
        pct = pct.toFixed(1)
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function searchover(e) {
    searchbtn.style["opacity"] = "1.0";
}
function searchout(e) {
    if (searching) {
        searchbtn.style["opacity"] = "1.0";
    } else {
        searchbtn.style["opacity"] = "0.1";
    }
}
]]></script><rect x="0" y="0" width="1200" height="630" fill="url(#background)"/><text text-anchor="middle" x="600.00" y="24.00" font-size="17" font-family="Verdana" fill="rgb(0, 0, 0)">Flame Graph</text><text id="details" text-anchor="left" x="10.00" y="613.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><text id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" text-anchor="left" x="10.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Reset Zoom</text><text id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" text-anchor="left" x="1090.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Search</text><text id="matched" text-anchor="left" x="1090.00" y="613.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>perf (4 samples, 11.11%)</title><rect x="10" y="565" width="131" height="15" fill="rgb(222,77,36)"/><text text-anchor="left" x="13.00" y="575.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">perf</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>entry_SYSCALL_64_after_hwframe (4 samples, 11.11%)</title><rect x="10" y="549" width="131" height="15" fill="rgb(247,176,32)"/><text text-anchor="left" x="13.00" y="559.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">entry_SYSCALL_64..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_syscall_64 (4 samples, 11.11%)</title><rect x="10" y="533" width="131" height="15" fill="rgb(208,129,19)"/><text text-anchor="left" x="13.00" y="543.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">do_syscall_64</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__x64_sys_execve (4 samples, 11.11%)</title><rect x="10" y="517" width="131" height="15" fill="rgb(215,204,31)"/><text text-anchor="left" x="13.00" y="527.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__x64_sys_execve</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__do_execve_file.isra.0 (4 samples, 11.11%)</title><rect x="10" y="501" width="131" height="15" fill="rgb(217,73,24)"/><text text-anchor="left" x="13.00" y="511.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__do_execve_file..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>search_binary_handler (4 samples, 11.11%)</title><rect x="10" y="485" width="131" height="15" fill="rgb(213,141,31)"/><text text-anchor="left" x="13.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">search_binary_ha..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>load_elf_binary (4 samples, 11.11%)</title><rect x="10" y="469" width="131" height="15" fill="rgb(250,116,30)"/><text text-anchor="left" x="13.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">load_elf_binary</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>setup_new_exec (4 samples, 11.11%)</title><rect x="10" y="453" width="131" height="15" fill="rgb(220,73,27)"/><text text-anchor="left" x="13.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">setup_new_exec</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>perf_event_exec (4 samples, 11.11%)</title><rect x="10" y="437" width="131" height="15" fill="rgb(231,42,35)"/><text text-anchor="left" x="13.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">perf_event_exec</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>ctx_resched (4 samples, 11.11%)</title><rect x="10" y="421" width="131" height="15" fill="rgb(252,72,53)"/><text text-anchor="left" x="13.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">ctx_resched</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>perf_pmu_enable.part.0 (4 samples, 11.11%)</title><rect x="10" y="405" width="131" height="15" fill="rgb(238,13,6)"/><text text-anchor="left" x="13.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">perf_pmu_enable...</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>x86_pmu_enable (4 samples, 11.11%)</title><rect x="10" y="389" width="131" height="15" fill="rgb(240,59,39)"/><text text-anchor="left" x="13.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">x86_pmu_enable</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>intel_tfa_pmu_enable_all (4 samples, 11.11%)</title><rect x="10" y="373" width="131" height="15" fill="rgb(224,73,33)"/><text text-anchor="left" x="13.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">intel_tfa_pmu_en..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>native_write_msr (4 samples, 11.11%)</title><rect x="10" y="357" width="131" height="15" fill="rgb(223,54,40)"/><text text-anchor="left" x="13.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">native_write_msr</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[unknown] (1 samples, 2.78%)</title><rect x="141" y="549" width="32" height="15" fill="rgb(207,166,16)"/><text text-anchor="left" x="144.00" y="559.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">[u..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (1 samples, 2.78%)</title><rect x="141" y="533" width="32" height="15" fill="rgb(205,45,3)"/><text text-anchor="left" x="144.00" y="543.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;s..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_fini (1 samples, 2.78%)</title><rect x="173" y="549" width="33" height="15" fill="rgb(219,21,43)"/><text text-anchor="left" x="176.00" y="559.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">_f..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (1 samples, 2.78%)</title><rect x="173" y="533" width="33" height="15" fill="rgb(249,26,44)"/><text text-anchor="left" x="176.00" y="543.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;s..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 2.78%)</title><rect x="796" y="293" width="33" height="15" fill="rgb(238,137,1)"/><text text-anchor="left" x="799.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;a..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 5.56%)</title><rect x="796" y="309" width="66" height="15" fill="rgb(219,147,7)"/><text text-anchor="left" x="799.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;alloc:..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 2.78%)</title><rect x="829" y="293" width="33" height="15" fill="rgb(250,129,17)"/><text text-anchor="left" x="832.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">co..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 2.78%)</title><rect x="829" y="277" width="33" height="15" fill="rgb(205,5,19)"/><text text-anchor="left" x="832.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;u..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 2.78%)</title><rect x="862" y="309" width="33" height="15" fill="rgb(253,107,23)"/><text text-anchor="left" x="865.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">co..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 2.78%)</title><rect x="862" y="293" width="33" height="15" fill="rgb(225,33,19)"/><text text-anchor="left" x="865.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">co..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::vec::Vec&lt;T&gt;::push (3 samples, 8.33%)</title><rect x="895" y="149" width="98" height="15" fill="rgb(248,24,32)"/><text text-anchor="left" x="898.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">alloc::vec:..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::write (2 samples, 5.56%)</title><rect x="927" y="133" width="66" height="15" fill="rgb(226,97,48)"/><text text-anchor="left" x="930.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::p..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>page_fault (1 samples, 2.78%)</title><rect x="960" y="117" width="33" height="15" fill="rgb(251,128,6)"/><text text-anchor="left" x="963.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">pa..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_page_fault (1 samples, 2.78%)</title><rect x="960" y="101" width="33" height="15" fill="rgb(231,213,38)"/><text text-anchor="left" x="963.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">do..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__do_page_fault (1 samples, 2.78%)</title><rect x="960" y="85" width="33" height="15" fill="rgb(247,62,5)"/><text text-anchor="left" x="963.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_user_addr_fault (1 samples, 2.78%)</title><rect x="960" y="69" width="33" height="15" fill="rgb(218,77,24)"/><text text-anchor="left" x="963.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">do..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>find_vma (1 samples, 2.78%)</title><rect x="960" y="53" width="33" height="15" fill="rgb(238,136,29)"/><text text-anchor="left" x="963.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">fi..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>vmacache_find (1 samples, 2.78%)</title><rect x="960" y="37" width="33" height="15" fill="rgb(237,74,43)"/><text text-anchor="left" x="963.00" y="47.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">vm..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>byteorder::io::ReadBytesExt::read_u32 (1 samples, 2.78%)</title><rect x="993" y="149" width="33" height="15" fill="rgb(254,129,23)"/><text text-anchor="left" x="996.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">by..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (1 samples, 2.78%)</title><rect x="993" y="133" width="33" height="15" fill="rgb(254,18,15)"/><text text-anchor="left" x="996.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;s..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (1 samples, 2.78%)</title><rect x="993" y="117" width="33" height="15" fill="rgb(226,117,26)"/><text text-anchor="left" x="996.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">st..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 2.78%)</title><rect x="993" y="101" width="33" height="15" fill="rgb(252,93,28)"/><text text-anchor="left" x="996.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">co..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::intrinsics::copy_nonoverlapping (1 samples, 2.78%)</title><rect x="993" y="85" width="33" height="15" fill="rgb(215,157,37)"/><text text-anchor="left" x="996.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">co..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__memmove_avx_unaligned_erms (1 samples, 2.78%)</title><rect x="993" y="69" width="33" height="15" fill="rgb(250,80,11)"/><text text-anchor="left" x="996.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::BufRead&gt;::fill_buf (2 samples, 5.56%)</title><rect x="1026" y="117" width="65" height="15" fill="rgb(234,185,2)"/><text text-anchor="left" x="1029.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;std::i..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::cmp::min (2 samples, 5.56%)</title><rect x="1026" y="101" width="65" height="15" fill="rgb(230,206,34)"/><text text-anchor="left" x="1029.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::cmp::Ord::min (2 samples, 5.56%)</title><rect x="1026" y="85" width="65" height="15" fill="rgb(226,205,39)"/><text text-anchor="left" x="1029.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::cmp::min_by (2 samples, 5.56%)</title><rect x="1026" y="69" width="65" height="15" fill="rgb(246,37,45)"/><text text-anchor="left" x="1029.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>byteorder::io::ReadBytesExt::read_u8 (3 samples, 8.33%)</title><rect x="1026" y="149" width="98" height="15" fill="rgb(216,126,54)"/><text text-anchor="left" x="1029.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">byteorder::..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (3 samples, 8.33%)</title><rect x="1026" y="133" width="98" height="15" fill="rgb(212,166,12)"/><text text-anchor="left" x="1029.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;std::io::c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (1 samples, 2.78%)</title><rect x="1091" y="117" width="33" height="15" fill="rgb(247,68,35)"/><text text-anchor="left" x="1094.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">st..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_start (29 samples, 80.56%)</title><rect x="206" y="549" width="951" height="15" fill="rgb(205,1,23)"/><text text-anchor="left" x="209.00" y="559.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">_start</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__libc_start_main (29 samples, 80.56%)</title><rect x="206" y="533" width="951" height="15" fill="rgb(220,37,32)"/><text text-anchor="left" x="209.00" y="543.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__libc_start_main</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>main (29 samples, 80.56%)</title><rect x="206" y="517" width="951" height="15" fill="rgb(225,139,0)"/><text text-anchor="left" x="209.00" y="527.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">main</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::rt::lang_start_internal (29 samples, 80.56%)</title><rect x="206" y="501" width="951" height="15" fill="rgb(246,173,38)"/><text text-anchor="left" x="209.00" y="511.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::rt::lang_start_internal</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panic::catch_unwind (29 samples, 80.56%)</title><rect x="206" y="485" width="951" height="15" fill="rgb(248,113,16)"/><text text-anchor="left" x="209.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panic::catch_unwind</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panicking::try (29 samples, 80.56%)</title><rect x="206" y="469" width="951" height="15" fill="rgb(251,6,45)"/><text text-anchor="left" x="209.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panicking::try</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panicking::try::do_call (29 samples, 80.56%)</title><rect x="206" y="453" width="951" height="15" fill="rgb(236,172,12)"/><text text-anchor="left" x="209.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panicking::try::do_call</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (29 samples, 80.56%)</title><rect x="206" y="437" width="951" height="15" fill="rgb(221,125,19)"/><text text-anchor="left" x="209.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::rt::lang_start::{{closure}} (29 samples, 80.56%)</title><rect x="206" y="421" width="951" height="15" fill="rgb(232,166,13)"/><text text-anchor="left" x="209.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::rt::lang_start::{{closure}}</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys_common::backtrace::__rust_begin_short_backtrace (29 samples, 80.56%)</title><rect x="206" y="405" width="951" height="15" fill="rgb(211,54,4)"/><text text-anchor="left" x="209.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ops::function::FnOnce::call_once (29 samples, 80.56%)</title><rect x="206" y="389" width="951" height="15" fill="rgb(232,139,18)"/><text text-anchor="left" x="209.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::ops::function::FnOnce::call_once</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>search::main (29 samples, 80.56%)</title><rect x="206" y="373" width="951" height="15" fill="rgb(254,60,48)"/><text text-anchor="left" x="209.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">search::main</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>search::search (29 samples, 80.56%)</title><rect x="206" y="357" width="951" height="15" fill="rgb(210,47,4)"/><text text-anchor="left" x="209.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">search::search</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>lookup::Ngrams::search (29 samples, 80.56%)</title><rect x="206" y="341" width="951" height="15" fill="rgb(239,44,18)"/><text text-anchor="left" x="209.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">lookup::Ngrams::search</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>lookup::Ngrams::search_trigrams (29 samples, 80.56%)</title><rect x="206" y="325" width="951" height="15" fill="rgb(247,124,36)"/><text text-anchor="left" x="209.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">lookup::Ngrams::search_trigrams</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::iter::traits::iterator::Iterator::collect (8 samples, 22.22%)</title><rect x="895" y="309" width="262" height="15" fill="rgb(221,124,0)"/><text text-anchor="left" x="898.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::iter::traits::iterator::Itera..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 22.22%)</title><rect x="895" y="293" width="262" height="15" fill="rgb(229,43,39)"/><text text-anchor="left" x="898.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (8 samples, 22.22%)</title><rect x="895" y="277" width="262" height="15" fill="rgb(251,64,5)"/><text text-anchor="left" x="898.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 22.22%)</title><rect x="895" y="261" width="262" height="15" fill="rgb(210,57,36)"/><text text-anchor="left" x="898.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 22.22%)</title><rect x="895" y="245" width="262" height="15" fill="rgb(251,9,2)"/><text text-anchor="left" x="898.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::iter::traits::iterator::Itera..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 22.22%)</title><rect x="895" y="229" width="262" height="15" fill="rgb(212,29,9)"/><text text-anchor="left" x="898.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;core::iter::adapters::Map&lt;I,F&gt; as ..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::iter::traits::iterator::Iterator::fold (8 samples, 22.22%)</title><rect x="895" y="213" width="262" height="15" fill="rgb(205,28,32)"/><text text-anchor="left" x="898.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::iter::traits::iterator::Itera..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::iter::adapters::map_fold::{{closure}} (8 samples, 22.22%)</title><rect x="895" y="197" width="262" height="15" fill="rgb(212,176,48)"/><text text-anchor="left" x="898.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">core::iter::adapters::map_fold::{{c..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>lookup::Ngrams::search_trigrams::{{closure}} (8 samples, 22.22%)</title><rect x="895" y="181" width="262" height="15" fill="rgb(231,75,51)"/><text text-anchor="left" x="898.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">lookup::Ngrams::search_trigrams::{{..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>lookup::Ngrams::search_ngram (8 samples, 22.22%)</title><rect x="895" y="165" width="262" height="15" fill="rgb(220,86,23)"/><text text-anchor="left" x="898.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">lookup::Ngrams::search_ngram</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 2.78%)</title><rect x="1124" y="149" width="33" height="15" fill="rgb(227,141,3)"/><text text-anchor="left" x="1127.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">co..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (1 samples, 2.78%)</title><rect x="1124" y="133" width="33" height="15" fill="rgb(234,120,6)"/><text text-anchor="left" x="1127.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">co..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>all (36 samples, 100%)</title><rect x="10" y="581" width="1180" height="15" fill="rgb(207,122,10)"/><text text-anchor="left" x="13.00" y="591.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>search (32 samples, 88.89%)</title><rect x="141" y="565" width="1049" height="15" fill="rgb(247,30,37)"/><text text-anchor="left" x="144.00" y="575.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">search</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>entry_SYSCALL_64_after_hwframe (1 samples, 2.78%)</title><rect x="1157" y="549" width="33" height="15" fill="rgb(218,80,7)"/><text text-anchor="left" x="1160.00" y="559.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">en..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_syscall_64 (1 samples, 2.78%)</title><rect x="1157" y="533" width="33" height="15" fill="rgb(225,16,37)"/><text text-anchor="left" x="1160.00" y="543.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">do..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__x64_sys_execve (1 samples, 2.78%)</title><rect x="1157" y="517" width="33" height="15" fill="rgb(217,96,39)"/><text text-anchor="left" x="1160.00" y="527.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__do_execve_file.isra.0 (1 samples, 2.78%)</title><rect x="1157" y="501" width="33" height="15" fill="rgb(240,208,36)"/><text text-anchor="left" x="1160.00" y="511.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>search_binary_handler (1 samples, 2.78%)</title><rect x="1157" y="485" width="33" height="15" fill="rgb(207,7,46)"/><text text-anchor="left" x="1160.00" y="495.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">se..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>load_elf_binary (1 samples, 2.78%)</title><rect x="1157" y="469" width="33" height="15" fill="rgb(214,136,39)"/><text text-anchor="left" x="1160.00" y="479.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">lo..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>elf_map (1 samples, 2.78%)</title><rect x="1157" y="453" width="33" height="15" fill="rgb(240,136,54)"/><text text-anchor="left" x="1160.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">el..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>vm_mmap (1 samples, 2.78%)</title><rect x="1157" y="437" width="33" height="15" fill="rgb(218,211,2)"/><text text-anchor="left" x="1160.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">vm..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>vm_mmap_pgoff (1 samples, 2.78%)</title><rect x="1157" y="421" width="33" height="15" fill="rgb(209,113,53)"/><text text-anchor="left" x="1160.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">vm..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_mmap (1 samples, 2.78%)</title><rect x="1157" y="405" width="33" height="15" fill="rgb(246,204,40)"/><text text-anchor="left" x="1160.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">do..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>mmap_region (1 samples, 2.78%)</title><rect x="1157" y="389" width="33" height="15" fill="rgb(212,112,45)"/><text text-anchor="left" x="1160.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">mm..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>perf_event_mmap (1 samples, 2.78%)</title><rect x="1157" y="373" width="33" height="15" fill="rgb(206,60,12)"/><text text-anchor="left" x="1160.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">pe..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>perf_iterate_sb (1 samples, 2.78%)</title><rect x="1157" y="357" width="33" height="15" fill="rgb(227,116,5)"/><text text-anchor="left" x="1160.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">pe..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>perf_iterate_ctx (1 samples, 2.78%)</title><rect x="1157" y="341" width="33" height="15" fill="rgb(229,54,51)"/><text text-anchor="left" x="1160.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">pe..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>perf_event_mmap_output (1 samples, 2.78%)</title><rect x="1157" y="325" width="33" height="15" fill="rgb(222,208,35)"/><text text-anchor="left" x="1160.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">pe..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__perf_event__output_id_sample (1 samples, 2.78%)</title><rect x="1157" y="309" width="33" height="15" fill="rgb(250,174,27)"/><text text-anchor="left" x="1160.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>memcpy_erms (1 samples, 2.78%)</title><rect x="1157" y="293" width="33" height="15" fill="rgb(250,167,39)"/><text text-anchor="left" x="1160.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">me..</text></g></svg>